on: [push]

jobs:
  build:
    env:
      PIPENV_VERBOSITY: -1

      # This is where you will need to introduce the Snyk API token created with your Snyk account
      SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      sarifFile: snyk-code.sarif
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
        persist-credentials: false
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: "3.11.6"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pipenv
        pipenv sync -d
    - name: Set up Snyk CLI to check for security issues
      # Snyk can be used to break the build when it detects security issues.
      # In this case we want to upload the SAST issues to GitHub Code Scanning
      uses: snyk/actions/setup@0.4.0
    - run: pipenv run ./test.sh

    # Runs Snyk Code (SAST) analysis and uploads result into GitHub.
    # Use || true to not fail the pipeline
    - name: Snyk Code test
      run: snyk code test --sarif > $sarifFile # || true

    - name: Snyk test
      run: snyk test
    - name: Coveralls GitHub Action
      uses: coverallsapp/github-action@v2.2.3
    - name: Snyk monitor
      run: snyk monitor

    # Push the Snyk Code results into GitHub Code Scanning tab
    - name: Upload result to GitHub Code Scanning
      uses: github/codeql-action/upload-sarif@v2
      with:
        sarif_file: ${{ env.sarifFile }}